--------------------------------------------------------------------------------------------------------------------------------------------
10/05/2023
* Произведена реструктуризация файлов движка

* В класс GameObject добавлен метод intersection_distance, позволяющий находить длину луча, пересекающего объект

* В класс GameCamera добавлен метод get_rays_matrix, позволяющий получить матрицу со всеми лучами, выходящими из камеры

* Файл ExceptionModule.py разделён на MathExceptionModule.py и EngineExceptionModule.py; обращения к ним изменены
  соответственно

05/05/2023
* В класс Vector добавлена функция normalize, позволяющая нормировать вектор

* В класс Ray добавлена функция normalize, позволяющая нормировать луч

* Создан файл VisualisationModule.py

03/05/2023
* Исправлена ошибка в функциях planar_rotate и rotate_3d класса GameCamera: Теперь поворот производится только при
  существовании параметра direction.

02/05/2023
* В MainClassesTests.py были добавлены классы TestsEntity, TestsEntitiesList, TestsGameObject, TestsGameCamera
  для проверки работы соответствующих классов CoreModule

* В ExceptionModule.py добавлены новые сообщения об ошибках

28/04/2023
* В класс Game добавлены функции get_entity_class, get_ray_class, get_object_class, get_camera_class, позволяющие
  получать доступ к классам GameEntity, GameRay, GameObject, GameCamera соответственно

* Создан файл MainClassesTests.py для тестирования данных

* ErrorModule.py переименован в ExceptionModule.py


17/04/2023
* Класс ошибок EngineException перешёл в свой файл ErrorModule.py

* Alpha_Vision.py переименован в DimensionModule.py

* Создан файл CoreModule.py

* Из объектов класса Matrix можно доставать строки в виде вектор-строк

* Из объектов класса Vector можно доставать координаты

14/04/2023
* Функция determinant класса Matrix теперь работает с векторами.

13/04/2023
* Добавлены функции addition, subtraction, multiplication, division в класс Matrix. Соответствующие операторы перегружены.

* Перегружен оператор сравнения в классе Matrix

* Функция rotator класса Matrix переобозначена как n_rotator

* В класс Matrix добавлена функция xyz_rotator для вычисления матрицы поворота Тейта-Брайана

* В класс Matrix добавлена возможность создания нулевых матриц размера n*n и m*n при вводе соответствующих данных

* При инициализации класса Matrix все вещественные значения теперь округляются до пятого знака после запятой

* В класс Matrix добавлена функция minor, принимающая на вход список индексов строк и список индексов столбцов
  и возвращающая минор матрицы

* В класс Vector добавлено разделение на вектора-строки и вектора-столбцы

* В класс Vector добавлена возможность создание нулевых векторов-строк при вводе соответствующих данных

* В класс Point добавлена возможность создания точки путём указания соответствующего вектора

* Функция vector_product класса Vector теперь считает векторное произведение при помощи определителей

07/04/2023
* Функция rotator изменена для генерации n-мерных матриц

* Добавлены тесты для матрицы Грэма и скалярного произведения в векторном пространстве

06/04/2023
* В класс Matrix добавлена функция rotator, возвращающая матрицу поворота по нужной оси на нужный угол. Заданных
  осей и углов может быть несколько.

* Добавлены соответствующие тесты в LowLevelClassesTests.py

04/04/2023
* В LowLevelClassesTests были добавлены классы TestsMatrix, TestsVector, TestsVectorSpace для проверки работы
  соответствующих классов Alpha_Vision

03/04/2023
* Graph_Engine_Mark_II.py переименован в Alpha_Vision.py

* Отфоматирован код для более комфортного восприятия

* Добавлен класс EngineException для внутренних ошибок движка

* Все стандартные сообщения об ошибках заменены на сообщения из EngineException

* Создан файл LowLevelClassesTests.py для тестирования данных